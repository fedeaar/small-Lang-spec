{
    "scopeName":"source.slspec",
    "patterns": [
        { "include": "#expression" }
    ],
    "repository": {
        "expression": {
            "patterns": [
                { "include": "#keyword.control.slspec" },
                { "include": "#keyword.function.slspec" },
                { "include": "#keyword.function.inner.slspec" },
                { "include": "#support.function.slspec" },
                { "include": "#support.function.inner.slspec" },
                { "include": "#variable.parameter.slspec" },
                { "include": "#entity.name.type.slspec" },
                { "include": "#entity.name.type.seq.slspec" },
                { "include": "#entity.name.type.seq.angle.slspec" },
                { "include": "#entity.name.type.mat.slspec" },
                { "include": "#entity.name.type.mat.angle.slspec" },
                { "include": "#entity.name.function.slspec" },
                { "include": "#entity.name.function.type.slspec" },
                { "include": "#entity.name.function.enum.slspec" },
                { "include": "#variable.other.readwrite.slspec"},
                { "include": "#constant.language.slspec" },
                { "include": "#variable.name.slspec" },
                { "include": "#constant.numeric.slspec" },
                { "include": "#constant.character.slspec" },
                { "include": "#keyword.operator.logic.slspec" },
                { "include": "#keyword.operator.math.slspec" },
                { "include": "#punctuation.definition.slspec" },
                { "include": "#comment.block.slspec" },
                { "include": "#comment.line.slspec" },
                { "include": "#keyword.control.tad.slspec" }
            ]
        },
        "keyword.control.slspec": {
            "match": "(?i)\\b(proc|aux|pred|pre|post|enum|type|wp|def)\\b",
            "name": "keyword.control.slspec"
        },
        "keyword.function.slspec": {
            "match":"(?i)\\b(if|fi|endif|while|endwhile|skip|return)\\b|\\:\\=",
            "name":"keyword.function.slspec"
        },
        "keyword.function.inner.slspec": {
            "match":"(?i)\\b(then|else|do)\\b",
            "name":"keyword.function.inner.slspec"
        },
        "support.function.slspec": {
            "match":"(?i)\\b(sum|prod|length|head|tail|addFirst|concat|subSeq|setAt|apariciones|ord|div|mod|pot|log|sin|cos|tan|asin|acos|atan|abs)\\b|‚àë|‚àè|‚ÖÄ|‚Ñø|\\+\\+",
            "name":"support.function.slspec"
        },
        "support.function.inner.slspec": {
            "match":"(?i)\\b(from|to|for)\\b",
            "name":"support.function.inner.slspec"
        },
        "variable.parameter.slspec": {
            "match": "(?i)\\b(in|out|inout)\\b",
            "name": "variable.parameter.slspec"
        },
        "entity.name.type.slspec": {
            "match":"(?i)\\b(‚Ñ§|‚Ñù|Char|Bool|T|Nat|ùïã)\\b|‚®â",
            "name":"entity.name.type.slspec"
        },
        "entity.name.type.mat.slspec": {
            "begin": "(?i)\\bmat\\[",
            "end":"\\]",
            "name":"entity.name.type.seq.slspec",
            "patterns":[
                { "include": "#entity.name.type.slspec"}, 
                {"include":"#entity.name.type.seq.slspec"}
            ]
        },
        "entity.name.type.mat.angle.slspec": {
            "begin": "(?i)\\bmat‚ü®",
            "end":"\\‚ü©",
            "name":"entity.name.type.seq.slspec",
            "patterns":[
                { "include": "#entity.name.type.slspec"}, 
                {"include":"#entity.name.type.seq.slspec"}
            ]
        },
        "entity.name.function.slspec": {
            "match":"\\b[\\D&&\\w]\\w*(\\?|\\b)\\s*(?=\\()",
            "name":"entity.name.function.slspec"
        },
        "entity.name.function.type.slspec": {
            "match":"(?i)(?<=type)\\b[\\D&&\\w]\\w*\\b\\s*(?=\\=)",
            "name":"entity.name.function.slspec"
        },
        "entity.name.function.enum.slspec": {
            "match":"(?i)(?<=enum)\\b\\D\\w*\\b\\s*(?=\\{)",
            "name":"entity.name.function.slspec"
        },
        "variable.name.slspec": {
            "match":"(\\b)([a-z]|[A-Z])((\\d)?)(\\b)",
            "name":"variable.name.slspec"
        },
        "variable.other.readwrite.slspec": {
            "match":"(\\b[\\D&&\\w]\\w*(?=(\\[|‚ü®)))|((?<=\\|)(\\w*)(?=\\|))",
            "name":"variable.other.readwrite.slspec"
        },
        "constant.language.slspec": {
            "match":"(?i)\\b(true|false)\\b|‚ä•",
            "name":"constant.language.slspec"
        },
        "constant.numeric.slspec": {
            "match":"(?<!\\d\\.)\\b\\d+(\\.\\d+)?\\b(?!\\.)",
            "name":"constant.numeric.slspec"
        },
        "constant.character.slspec": {
            "match":"(\"|').??(\"|')",
            "name":"constant.character.slspec"
        },
        "keyword.operator.logic.slspec": {
            "match":"(‚àßL|‚à®L|‚àß|‚à®|‚üπL|‚üπ\\?|‚ü∏|‚ü∂L|‚ü∂|‚üπ|‚ü∫|‚â°|‚àÄ|‚àÉ|‚àÑ|¬¨|‚ãÇ|‚ãÉ|‚äÇ|‚äÑ|‚àà|‚àâ|‚äÜ|‚äà|&&|\\|\\|)",
            "name":"keyword.operator.logic.slspec"
        },
        "keyword.operator.math.slspec": {
            "match":"(\\+|\\-|(\\=(obs)?)|\\*|‚â†|‚â§|\\<|‚â•|\\>|‚àé|\\%|\\^|\\#|√ó|\\!)",
            "name":"keyword.operator.math.slspec"
        },
        "punctuation.definition.slspec": {
            "match":"(\\{|\\}|\\(|\\)|\\]|\\[|‚ü®|‚ü©|\\|)",
            "name":"punctuation.parenthesis.slspec"
        },
        "comment.block.slspec": {
            "begin": "\/\\*",
            "end": "\\*\/",
            "beginCaptures": {
                "0": { "name": "punctuation.comment.open" }
            },
            "endCaptures": {
                "0": { "name": "punctuation.comment.close" }
            },
            "name": "comment.block.slspec"
        },
        "comment.line.slspec": {
            "begin": "\/\/",
            "end": "\n",
            "beginCaptures": {
                "0": { "name": "punctuation.comment.open" }
            },
            "endCaptures": {
                "0": { "name": "punctuation.comment.close" }
            },
            "name": "comment.line.slspec"
        },
        "keyword.control.tad.slspec": {
            "match": "(?i)\\b(tad|fin tad|igualdad|generos|exporta|usa|observadores|generadores|otras operaciones|axiomas)\\b",
            "name": "keyword.control.slspec"
        }
    }
}